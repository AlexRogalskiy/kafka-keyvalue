#!/usr/bin/env bash
[ -z "$DEBUG" ] || set -x
set -eo pipefail

GIT_STATUS=$(git status --untracked-files=no --porcelain=v2)
[ ! -z "$SOURCE_COMMIT" ] || export SOURCE_COMMIT=$(git rev-parse --verify HEAD)
[ -z "$GIT_STATUS" ] || export SOURCE_COMMIT="$SOURCE_COMMIT-dirty"
[ ! -z "$SOURCE_BRANCH" ] || export SOURCE_BRANCH=$(git branch --show-current)
[ ! -z "$IMAGE_NAME" ] || export IMAGE_NAME="yolean/kafka-keyvalue:$SOURCE_COMMIT"

[ -n "$BUILDARCH" ] || BUILDARCH=$(uname -m)
[ "$BUILDARCH" != "x86_64" ] || BUILDARCH=amd64
[ "$BUILDARCH" != "aarch64" ] || BUILDARCH=arm64
[ "$BUILDARCH" != "arm64" ] || [ -n "$BUILDARCHV" ] || BUILDARCHV="/v8"

BUILDX="docker buildx"
! command -v nerdctl || BUILDX="nerdctl"
[ -n "$NOPUSH" ] || PUSH="--push"

echo "------ HOOK START - BUILD -------"
printenv

[ -z "$IMAGE_NAME" ] && echo "IMAGE_NAME is required" && exit 1;
function imagename {
  buildname=$1
  case $IMAGE_NAME in
    *:latest) echo -n $IMAGE_NAME | sed "s|:latest|:$buildname|" ;;
    *:*) echo -n $IMAGE_NAME | sed "s|:\(.*\)|:\1-$buildname|" ;;
    *) echo $IMAGE_NAME:$buildname ;;
  esac
}

# Skip tests on docker hub because they time out, always have.
[ ! -z "$BUILD_CODE" ] && echo "This looks like a docker hub build. Skipping tests." && mvnflags="-Dmaven.test.skip=true"

$BUILDX build $PUSH --platform=linux/amd64,linux/arm64/v8 \
  -t $(imagename jvm) --build-arg build="package $mvnflags" --target=jvm \
  --build-arg SOURCE_COMMIT=$SOURCE_COMMIT --build-arg SOURCE_BRANCH=$SOURCE_BRANCH --build-arg IMAGE_NAME=$IMAGE_NAME  .

$BUILDX build $PUSH --platform=linux/$BUILDARCH$BUILDARCHV \
  -t $IMAGE_NAME --build-arg build="package -Pnative $mvnflags" \
  --build-arg SOURCE_COMMIT=$SOURCE_COMMIT --build-arg SOURCE_BRANCH=$SOURCE_BRANCH --build-arg IMAGE_NAME=$IMAGE_NAME .

echo "------ HOOK END   - BUILD -------"
